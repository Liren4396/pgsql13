#!/usr/bin/python3

# COMP3311 22T3 Assignment 2
# Print info about one movie; may need to choose

import sys
import psycopg2
import helpers
import re

### Globals

db = psycopg2.connect("dbname=ass2")
usage = f"Usage: {sys.argv[0]} 'PartialMovieName'"

### Command-line args

if len(sys.argv) < 2:
   print(usage)
   exit(1)
# process the command-line args ...

### Queries
query = f'''
select name, job, role, title, year from people
left join principals on people.id = principals.person
left join movies on principals.movie = movies.id
left join playsrole on playsrole.inmovie = principals.id
order by ord, title, year
;
'''
### Manipulating database

try:
   # your code goes here
   cur = db.cursor()
   cur.execute(query)
   movie = list()
   year = list()
   

   for t in cur.fetchall():
      if re.search(str.lower(sys.argv[1]), str.lower(t[3])) is not None and t[3] not in movie:
         movie.append(t[3])
         year.append(t[4])
   if len(movie) == 0:
      print(f"No movie matching: '{sys.argv[1]}'")
      exit(0)
   name = list()
   job = list()
   role = list()
   number = 1
   if len(movie) > 1:
      for count in range(1, len(movie) + 1):
         print(str(count)+".", movie[count - 1], f"({year[count - 1]})")
      number = input("Which movie? ")
   number = int(number)
   print(movie[number - 1], f"({year[number - 1]})")
   cur2 = db.cursor()
   cur2.execute(query)
   for t in cur2.fetchall():
      
      if str.lower(t[3]) == str.lower(movie[number - 1]):
         name.append(t[0])
         job.append(t[1])
         if t[2] is not None:
            role.append(t[2])
         else:
            role.append("???")

   count = 0
   for i in job:

      if i == 'actor' or i == 'actress' or i == 'self':
         print(name[count], "plays", role[count])
      else:
         print(name[count]+':', i)
      count += 1


except Exception as err:
   print("DB error: ", err)
finally:
   if db:
      db.close()

